import{Geometry}from'../core/Geometry.js';import{BufferGeometry}from'../core/BufferGeometry.js';import{Float32BufferAttribute}from'../core/BufferAttribute.js';import{Vector3}from'../math/Vector3.js';function TorusKnotGeometry(a,b,c,d,e,f,g){Geometry.call(this),this.type='TorusKnotGeometry',this.parameters={radius:a,tube:b,tubularSegments:c,radialSegments:d,p:e,q:f},g!==void 0&&console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.'),this.fromBufferGeometry(new TorusKnotBufferGeometry(a,b,c,d,e,f)),this.mergeVertices()}TorusKnotGeometry.prototype=Object.create(Geometry.prototype),TorusKnotGeometry.prototype.constructor=TorusKnotGeometry;function TorusKnotBufferGeometry(e,f,g,h,k,l){function m(a,b,c,d,e){var f=o(a),g=n(a),h=c/b*a,i=o(h);e.x=0.5*(d*(2+i))*f,e.y=0.5*(d*(2+i)*g),e.z=0.5*(d*n(h))}var n=Math.sin,o=Math.cos,r=Math.PI,s=Math.floor;BufferGeometry.call(this),this.type='TorusKnotBufferGeometry',this.parameters={radius:e,tube:f,tubularSegments:g,radialSegments:h,p:k,q:l},e=e||100,f=f||40,g=s(g)||64,h=s(h)||8,k=k||2,l=l||3;var t,i,j=[],w=[],x=[],y=[],z=new Vector3,A=new Vector3,C=new Vector3,D=new Vector3,E=new Vector3,B=new Vector3,F=new Vector3;for(t=0;t<=g;++t){var G=2*(t/g*k*r);for(m(G,k,l,e,C),m(G+0.01,k,l,e,D),B.subVectors(D,C),F.addVectors(D,C),E.crossVectors(B,F),F.crossVectors(E,B),E.normalize(),F.normalize(),i=0;i<=h;++i){var u=2*(i/h*r),v=-f*o(u),H=f*n(u);z.x=C.x+(v*F.x+H*E.x),z.y=C.y+(v*F.y+H*E.y),z.z=C.z+(v*F.z+H*E.z),w.push(z.x,z.y,z.z),A.subVectors(z,C).normalize(),x.push(A.x,A.y,A.z),y.push(t/g),y.push(i/h)}}for(i=1;i<=g;i++)for(t=1;t<=h;t++){var I=(h+1)*(i-1)+(t-1),a=(h+1)*i+(t-1),b=(h+1)*i+t,c=(h+1)*(i-1)+t;j.push(I,a,c),j.push(a,b,c)}this.setIndex(j),this.addAttribute('position',new Float32BufferAttribute(w,3)),this.addAttribute('normal',new Float32BufferAttribute(x,3)),this.addAttribute('uv',new Float32BufferAttribute(y,2))}TorusKnotBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TorusKnotBufferGeometry.prototype.constructor=TorusKnotBufferGeometry;export{TorusKnotGeometry,TorusKnotBufferGeometry};