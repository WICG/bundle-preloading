import{Geometry}from'../core/Geometry.js';import{BufferGeometry}from'../core/BufferGeometry.js';import{Float32BufferAttribute}from'../core/BufferAttribute.js';import{Vector3}from'../math/Vector3.js';function TorusGeometry(a,b,c,d,e){Geometry.call(this),this.type='TorusGeometry',this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e},this.fromBufferGeometry(new TorusBufferGeometry(a,b,c,d,e)),this.mergeVertices()}TorusGeometry.prototype=Object.create(Geometry.prototype),TorusGeometry.prototype.constructor=TorusGeometry;function TorusBufferGeometry(e,f,g,h,k){var l=Math.sin,m=Math.cos,n=Math.PI,o=Math.floor;BufferGeometry.call(this),this.type='TorusBufferGeometry',this.parameters={radius:e,tube:f,radialSegments:g,tubularSegments:h,arc:k},e=e||100,f=f||40,g=o(g)||8,h=o(h)||6,k=k||2*n;var p,j,i=[],q=[],r=[],s=[],t=new Vector3,w=new Vector3,x=new Vector3;for(p=0;p<=g;p++)for(j=0;j<=h;j++){var y=j/h*k,u=2*(p/g*n);w.x=(e+f*m(u))*m(y),w.y=(e+f*m(u))*l(y),w.z=f*l(u),q.push(w.x,w.y,w.z),t.x=e*m(y),t.y=e*l(y),x.subVectors(w,t).normalize(),r.push(x.x,x.y,x.z),s.push(j/h),s.push(p/g)}for(p=1;p<=g;p++)for(j=1;j<=h;j++){var v=(h+1)*p+j-1,a=(h+1)*(p-1)+j-1,b=(h+1)*(p-1)+j,c=(h+1)*p+j;i.push(v,a,c),i.push(a,b,c)}this.setIndex(i),this.addAttribute('position',new Float32BufferAttribute(q,3)),this.addAttribute('normal',new Float32BufferAttribute(r,3)),this.addAttribute('uv',new Float32BufferAttribute(s,2))}TorusBufferGeometry.prototype=Object.create(BufferGeometry.prototype),TorusBufferGeometry.prototype.constructor=TorusBufferGeometry;export{TorusGeometry,TorusBufferGeometry};