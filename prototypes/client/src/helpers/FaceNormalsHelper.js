import{Matrix3}from'../math/Matrix3.js';import{Vector3}from'../math/Vector3.js';import{LineSegments}from'../objects/LineSegments.js';import{LineBasicMaterial}from'../materials/LineBasicMaterial.js';import{Float32BufferAttribute}from'../core/BufferAttribute.js';import{BufferGeometry}from'../core/BufferGeometry.js';function FaceNormalsHelper(a,b,c,d){this.object=a,this.size=b===void 0?1:b;var e=c===void 0?16776960:c,f=d===void 0?1:d,g=0,h=this.object.geometry;h&&h.isGeometry?g=h.faces.length:console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');var i=new BufferGeometry,j=new Float32BufferAttribute(3*(2*g),3);i.addAttribute('position',j),LineSegments.call(this,i,new LineBasicMaterial({color:e,linewidth:f})),this.matrixAutoUpdate=!1,this.update()}FaceNormalsHelper.prototype=Object.create(LineSegments.prototype),FaceNormalsHelper.prototype.constructor=FaceNormalsHelper,FaceNormalsHelper.prototype.update=function(){var a=new Vector3,b=new Vector3,c=new Matrix3;return function(){this.object.updateMatrixWorld(!0),c.getNormalMatrix(this.object.matrixWorld);for(var d=this.object.matrixWorld,e=this.geometry.attributes.position,f=this.object.geometry,g=f.vertices,h=f.faces,j=0,k=0,i=h.length;k<i;k++){var l=h[k],m=l.normal;a.copy(g[l.a]).add(g[l.b]).add(g[l.c]).divideScalar(3).applyMatrix4(d),b.copy(m).applyMatrix3(c).normalize().multiplyScalar(this.size).add(a),e.setXYZ(j,a.x,a.y,a.z),++j,e.setXYZ(j,b.x,b.y,b.z),++j}e.needsUpdate=!0}}();export{FaceNormalsHelper};