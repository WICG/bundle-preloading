import{LinearFilter,LinearMipMapLinearFilter,ClampToEdgeWrapping}from'../constants.js';import{FileLoader}from'./FileLoader.js';import{DataTexture}from'../textures/DataTexture.js';import{DefaultLoadingManager}from'./LoadingManager.js';function DataTextureLoader(a){this.manager=a===void 0?DefaultLoadingManager:a,this._parser=null}Object.assign(DataTextureLoader.prototype,{load:function(a,b,c,d){var e=this,f=new DataTexture,g=new FileLoader(this.manager);return g.setResponseType('arraybuffer'),g.load(a,function(a){var c=e._parser(a);c&&(void 0===c.image?void 0!==c.data&&(f.image.width=c.width,f.image.height=c.height,f.image.data=c.data):f.image=c.image,f.wrapS=void 0===c.wrapS?ClampToEdgeWrapping:c.wrapS,f.wrapT=void 0===c.wrapT?ClampToEdgeWrapping:c.wrapT,f.magFilter=void 0===c.magFilter?LinearFilter:c.magFilter,f.minFilter=void 0===c.minFilter?LinearMipMapLinearFilter:c.minFilter,f.anisotropy=void 0===c.anisotropy?1:c.anisotropy,void 0!==c.format&&(f.format=c.format),void 0!==c.type&&(f.type=c.type),void 0!==c.mipmaps&&(f.mipmaps=c.mipmaps),1===c.mipmapCount&&(f.minFilter=LinearFilter),f.needsUpdate=!0,b&&b(f,c))},c,d),f}});export{DataTextureLoader};