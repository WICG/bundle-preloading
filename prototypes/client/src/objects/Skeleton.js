import{Matrix4}from'../math/Matrix4.js';function Skeleton(a,b){if(a=a||[],this.bones=a.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else{console.warn('THREE.Skeleton boneInverses is the wrong length.'),this.boneInverses=[];for(var c=0,d=this.bones.length;c<d;c++)this.boneInverses.push(new Matrix4)}}Object.assign(Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var a,b=0,c=this.bones.length;b<c;b++)a=new Matrix4,this.bones[b]&&a.getInverse(this.bones[b].matrixWorld),this.boneInverses.push(a)},pose:function(){var a,b,c;for(b=0,c=this.bones.length;b<c;b++)a=this.bones[b],a&&a.matrixWorld.getInverse(this.boneInverses[b]);for(b=0,c=this.bones.length;b<c;b++)a=this.bones[b],a&&(a.parent&&a.parent.isBone?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))},update:function(){var a=new Matrix4,b=new Matrix4;return function(){for(var c,d=this.bones,e=this.boneInverses,f=this.boneMatrices,g=this.boneTexture,h=0,i=d.length;h<i;h++)c=d[h]?d[h].matrixWorld:b,a.multiplyMatrices(c,e[h]),a.toArray(f,16*h);g!==void 0&&(g.needsUpdate=!0)}}(),clone:function(){return new Skeleton(this.bones,this.boneInverses)}});export{Skeleton};