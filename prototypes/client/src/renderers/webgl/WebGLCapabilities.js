function WebGLCapabilities(a,b,c){function d(b){if('highp'===b){if(0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.HIGH_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.HIGH_FLOAT).precision)return'highp';b='mediump'}return'mediump'===b&&0<a.getShaderPrecisionFormat(a.VERTEX_SHADER,a.MEDIUM_FLOAT).precision&&0<a.getShaderPrecisionFormat(a.FRAGMENT_SHADER,a.MEDIUM_FLOAT).precision?'mediump':'lowp'}var e,f=c.precision===void 0?'highp':c.precision,g=d(f);g!==f&&(console.warn('THREE.WebGLRenderer:',f,'not supported, using',g,'instead.'),f=g);var h=!0===c.logarithmicDepthBuffer&&!!b.get('EXT_frag_depth'),i=a.getParameter(a.MAX_TEXTURE_IMAGE_UNITS),j=a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS),k=a.getParameter(a.MAX_TEXTURE_SIZE),l=a.getParameter(a.MAX_CUBE_MAP_TEXTURE_SIZE),m=a.getParameter(a.MAX_VERTEX_ATTRIBS),n=a.getParameter(a.MAX_VERTEX_UNIFORM_VECTORS),o=a.getParameter(a.MAX_VARYING_VECTORS),p=a.getParameter(a.MAX_FRAGMENT_UNIFORM_VECTORS),q=0<j,r=!!b.get('OES_texture_float');return{getMaxAnisotropy:function(){if(void 0!=e)return e;var c=b.get('EXT_texture_filter_anisotropic');return e=null===c?0:a.getParameter(c.MAX_TEXTURE_MAX_ANISOTROPY_EXT),e},getMaxPrecision:d,precision:f,logarithmicDepthBuffer:h,maxTextures:i,maxVertexTextures:j,maxTextureSize:k,maxCubemapSize:l,maxAttributes:m,maxVertexUniforms:n,maxVaryings:o,maxFragmentUniforms:p,vertexTextures:q,floatFragmentTextures:r,floatVertexTextures:q&&r}}export{WebGLCapabilities};