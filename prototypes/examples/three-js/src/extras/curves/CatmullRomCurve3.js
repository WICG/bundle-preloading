import{Vector3}from'../../math/Vector3.js';import{Curve}from'../core/Curve.js';function CubicPoly(){function a(a,f,g,h){b=a,c=g,d=-3*a+3*f-2*g-h,e=2*a-2*f+g+h}var b=0,c=0,d=0,e=0;return{initCatmullRom:function(b,c,d,e,f){a(c,d,f*(d-b),f*(e-c))},initNonuniformCatmullRom:function(b,c,d,e,f,g,h){var i=(c-b)/f-(d-b)/(f+g)+(d-c)/g,j=(d-c)/g-(e-c)/(g+h)+(e-d)/h;i*=g,j*=g,a(c,d,i,j)},calc:function(a){var f=a*a;return b+c*a+d*f+e*(f*a)}}}var tmp=new Vector3,px=new CubicPoly,py=new CubicPoly,pz=new CubicPoly;function CatmullRomCurve3(a){Curve.call(this),this.points=a||[],this.closed=!1}CatmullRomCurve3.prototype=Object.create(Curve.prototype),CatmullRomCurve3.prototype.constructor=CatmullRomCurve3,CatmullRomCurve3.prototype.getPoint=function(a){var b=Math.pow,c=Math.floor,d=this.points,e=d.length;2>e&&console.log('duh, you need at least 2 points');var f=(e-(this.closed?0:1))*a,g=c(f),h=f-g;this.closed?g+=0<g?0:(c(Math.abs(g)/d.length)+1)*d.length:0==h&&g===e-1&&(g=e-2,h=1);var i,j,k,l;if(this.closed||0<g?i=d[(g-1)%e]:(tmp.subVectors(d[0],d[1]).add(d[0]),i=tmp),j=d[g%e],k=d[(g+1)%e],this.closed||g+2<e?l=d[(g+2)%e]:(tmp.subVectors(d[e-1],d[e-2]).add(d[e-1]),l=tmp),void 0===this.type||'centripetal'===this.type||'chordal'===this.type){var m='chordal'===this.type?0.5:0.25,n=b(i.distanceToSquared(j),m),o=b(j.distanceToSquared(k),m),p=b(k.distanceToSquared(l),m);1e-4>o&&(o=1),1e-4>n&&(n=o),1e-4>p&&(p=o),px.initNonuniformCatmullRom(i.x,j.x,k.x,l.x,n,o,p),py.initNonuniformCatmullRom(i.y,j.y,k.y,l.y,n,o,p),pz.initNonuniformCatmullRom(i.z,j.z,k.z,l.z,n,o,p)}else if('catmullrom'===this.type){var q=void 0===this.tension?0.5:this.tension;px.initCatmullRom(i.x,j.x,k.x,l.x,q),py.initCatmullRom(i.y,j.y,k.y,l.y,q),pz.initCatmullRom(i.z,j.z,k.z,l.z,q)}return new Vector3(px.calc(h),py.calc(h),pz.calc(h))};export{CatmullRomCurve3};