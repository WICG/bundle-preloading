import{Texture}from'../../../textures/Texture.js';import{Vector3}from'../../../math/Vector3.js';import{Quaternion}from'../../../math/Quaternion.js';function SpritePlugin(a,b){function c(){var a=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]),b=new Uint16Array([0,1,2,0,2,3]);f=m.createBuffer(),g=m.createBuffer(),m.bindBuffer(m.ARRAY_BUFFER,f),m.bufferData(m.ARRAY_BUFFER,a,m.STATIC_DRAW),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,g),m.bufferData(m.ELEMENT_ARRAY_BUFFER,b,m.STATIC_DRAW),h=d(),j={position:m.getAttribLocation(h,'position'),uv:m.getAttribLocation(h,'uv')},k={uvOffset:m.getUniformLocation(h,'uvOffset'),uvScale:m.getUniformLocation(h,'uvScale'),rotation:m.getUniformLocation(h,'rotation'),scale:m.getUniformLocation(h,'scale'),color:m.getUniformLocation(h,'color'),map:m.getUniformLocation(h,'map'),opacity:m.getUniformLocation(h,'opacity'),modelViewMatrix:m.getUniformLocation(h,'modelViewMatrix'),projectionMatrix:m.getUniformLocation(h,'projectionMatrix'),fogType:m.getUniformLocation(h,'fogType'),fogDensity:m.getUniformLocation(h,'fogDensity'),fogNear:m.getUniformLocation(h,'fogNear'),fogFar:m.getUniformLocation(h,'fogFar'),fogColor:m.getUniformLocation(h,'fogColor'),alphaTest:m.getUniformLocation(h,'alphaTest')};var c=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');c.width=8,c.height=8;var e=c.getContext('2d');e.fillStyle='white',e.fillRect(0,0,8,8),i=new Texture(c),i.needsUpdate=!0}function d(){var b=m.createProgram(),c=m.createShader(m.VERTEX_SHADER),d=m.createShader(m.FRAGMENT_SHADER);return m.shaderSource(c,['precision '+a.getPrecision()+' float;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform float rotation;','uniform vec2 scale;','uniform vec2 uvOffset;','uniform vec2 uvScale;','attribute vec2 position;','attribute vec2 uv;','varying vec2 vUV;','void main() {','vUV = uvOffset + uv * uvScale;','vec2 alignedPosition = position * scale;','vec2 rotatedPosition;','rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;','rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;','vec4 finalPosition;','finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );','finalPosition.xy += rotatedPosition;','finalPosition = projectionMatrix * finalPosition;','gl_Position = finalPosition;','}'].join('\n')),m.shaderSource(d,['precision '+a.getPrecision()+' float;','uniform vec3 color;','uniform sampler2D map;','uniform float opacity;','uniform int fogType;','uniform vec3 fogColor;','uniform float fogDensity;','uniform float fogNear;','uniform float fogFar;','uniform float alphaTest;','varying vec2 vUV;','void main() {','vec4 texture = texture2D( map, vUV );','if ( texture.a < alphaTest ) discard;','gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );','if ( fogType > 0 ) {','float depth = gl_FragCoord.z / gl_FragCoord.w;','float fogFactor = 0.0;','if ( fogType == 1 ) {','fogFactor = smoothstep( fogNear, fogFar, depth );','} else {','const float LOG2 = 1.442695;','fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );','fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );','}','gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );','}','}'].join('\n')),m.compileShader(c),m.compileShader(d),m.attachShader(b,c),m.attachShader(b,d),m.linkProgram(b),b}function e(c,a){return c.renderOrder===a.renderOrder?c.z===a.z?a.id-c.id:a.z-c.z:c.renderOrder-a.renderOrder}var f,g,h,j,k,i,m=a.context,n=a.state,l=new Vector3,o=new Quaternion,p=new Vector3;this.render=function(d,q){if(0!==b.length){void 0===h&&c(),m.useProgram(h),n.initAttributes(),n.enableAttribute(j.position),n.enableAttribute(j.uv),n.disableUnusedAttributes(),n.disable(m.CULL_FACE),n.enable(m.BLEND),m.bindBuffer(m.ARRAY_BUFFER,f),m.vertexAttribPointer(j.position,2,m.FLOAT,!1,16,0),m.vertexAttribPointer(j.uv,2,m.FLOAT,!1,16,8),m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,g),m.uniformMatrix4fv(k.projectionMatrix,!1,q.projectionMatrix.elements),n.activeTexture(m.TEXTURE0),m.uniform1i(k.map,0);var r=0,s=0,t=d.fog;t?(m.uniform3f(k.fogColor,t.color.r,t.color.g,t.color.b),t.isFog?(m.uniform1f(k.fogNear,t.near),m.uniform1f(k.fogFar,t.far),m.uniform1i(k.fogType,1),r=1,s=1):t.isFogExp2&&(m.uniform1f(k.fogDensity,t.density),m.uniform1i(k.fogType,2),r=2,s=2)):(m.uniform1i(k.fogType,0),r=0,s=0);for(var u,v=0,w=b.length;v<w;v++)u=b[v],u.modelViewMatrix.multiplyMatrices(q.matrixWorldInverse,u.matrixWorld),u.z=-u.modelViewMatrix.elements[14];b.sort(e);for(var x=[],v=0,w=b.length;v<w;v++){var u=b[v],y=u.material;if(!1!==y.visible){m.uniform1f(k.alphaTest,y.alphaTest),m.uniformMatrix4fv(k.modelViewMatrix,!1,u.modelViewMatrix.elements),u.matrixWorld.decompose(l,o,p),x[0]=p.x,x[1]=p.y;var z=0;d.fog&&y.fog&&(z=s),r!=z&&(m.uniform1i(k.fogType,z),r=z),null===y.map?(m.uniform2f(k.uvOffset,0,0),m.uniform2f(k.uvScale,1,1)):(m.uniform2f(k.uvOffset,y.map.offset.x,y.map.offset.y),m.uniform2f(k.uvScale,y.map.repeat.x,y.map.repeat.y)),m.uniform1f(k.opacity,y.opacity),m.uniform3f(k.color,y.color.r,y.color.g,y.color.b),m.uniform1f(k.rotation,y.rotation),m.uniform2fv(k.scale,x),n.setBlending(y.blending,y.blendEquation,y.blendSrc,y.blendDst),n.buffers.depth.setTest(y.depthTest),n.buffers.depth.setMask(y.depthWrite),y.map?a.setTexture2D(y.map,0):a.setTexture2D(i,0),m.drawElements(m.TRIANGLES,6,m.UNSIGNED_SHORT,0)}}n.enable(m.CULL_FACE),a.resetGLState()}}}export{SpritePlugin};