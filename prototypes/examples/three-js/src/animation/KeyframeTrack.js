import{KeyframeTrackPrototype}from'./KeyframeTrackPrototype.js';import{StringKeyframeTrack}from'./tracks/StringKeyframeTrack.js';import{BooleanKeyframeTrack}from'./tracks/BooleanKeyframeTrack.js';import{QuaternionKeyframeTrack}from'./tracks/QuaternionKeyframeTrack.js';import{ColorKeyframeTrack}from'./tracks/ColorKeyframeTrack.js';import{VectorKeyframeTrack}from'./tracks/VectorKeyframeTrack.js';import{NumberKeyframeTrack}from'./tracks/NumberKeyframeTrack.js';import{AnimationUtils}from'./AnimationUtils.js';import{KeyframeTrackConstructor}from'./KeyframeTrackConstructor.js';function KeyframeTrack(){KeyframeTrackConstructor.apply(this,arguments)}KeyframeTrack.prototype=KeyframeTrackPrototype,KeyframeTrackPrototype.constructor=KeyframeTrack,Object.assign(KeyframeTrack,{parse:function(a){if(a.type===void 0)throw new Error('track type undefined, can not parse');var b=KeyframeTrack._getTrackTypeForValueTypeName(a.type);if(a.times===void 0){var c=[],d=[];AnimationUtils.flattenJSON(a.keys,c,d,'value'),a.times=c,a.values=d}return void 0===b.parse?new b(a.name,a.times,a.values,a.interpolation):b.parse(a)},toJSON:function(a){var b,c=a.constructor;if(void 0!==c.toJSON)b=c.toJSON(a);else{b={name:a.name,times:AnimationUtils.convertArray(a.times,Array),values:AnimationUtils.convertArray(a.values,Array)};var d=a.getInterpolation();d!==a.DefaultInterpolation&&(b.interpolation=d)}return b.type=a.ValueTypeName,b},_getTrackTypeForValueTypeName:function(a){switch(a.toLowerCase()){case'scalar':case'double':case'float':case'number':case'integer':return NumberKeyframeTrack;case'vector':case'vector2':case'vector3':case'vector4':return VectorKeyframeTrack;case'color':return ColorKeyframeTrack;case'quaternion':return QuaternionKeyframeTrack;case'bool':case'boolean':return BooleanKeyframeTrack;case'string':return StringKeyframeTrack;}throw new Error('Unsupported typeName: '+a)}});export{KeyframeTrack};