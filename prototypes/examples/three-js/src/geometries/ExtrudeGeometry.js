import{Geometry}from'../core/Geometry.js';import{BufferGeometry}from'../core/BufferGeometry.js';import{Float32BufferAttribute}from'../core/BufferAttribute.js';import{Vector2}from'../math/Vector2.js';import{Vector3}from'../math/Vector3.js';import{ShapeUtils}from'../extras/ShapeUtils.js';function ExtrudeGeometry(a,b){Geometry.call(this),this.type='ExtrudeGeometry',this.parameters={shapes:a,options:b},this.fromBufferGeometry(new ExtrudeBufferGeometry(a,b)),this.mergeVertices()}ExtrudeGeometry.prototype=Object.create(Geometry.prototype),ExtrudeGeometry.prototype.constructor=ExtrudeGeometry;function ExtrudeBufferGeometry(a,b){return'undefined'==typeof a?void(a=[]):void(BufferGeometry.call(this),this.type='ExtrudeBufferGeometry',a=Array.isArray(a)?a:[a],this.addShapeList(a,b),this.computeVertexNormals())}ExtrudeBufferGeometry.prototype=Object.create(BufferGeometry.prototype),ExtrudeBufferGeometry.prototype.constructor=ExtrudeBufferGeometry,ExtrudeBufferGeometry.prototype.getArrays=function(){var a=this.getAttribute('position'),b=a?Array.prototype.slice.call(a.array):[],c=this.getAttribute('uv'),d=c?Array.prototype.slice.call(c.array):[],e=this.index,f=e?Array.prototype.slice.call(e.array):[];return{position:b,uv:d,index:f}},ExtrudeBufferGeometry.prototype.addShapeList=function(a,b){var c=a.length;b.arrays=this.getArrays();for(var d,e=0;e<c;e++)d=a[e],this.addShape(d,b);this.setIndex(b.arrays.index),this.addAttribute('position',new Float32BufferAttribute(b.arrays.position,3)),this.addAttribute('uv',new Float32BufferAttribute(b.arrays.uv,2))},ExtrudeBufferGeometry.prototype.addShape=function(a,c){function d(a,b,c){return b||console.error('THREE.ExtrudeGeometry: vec does not exist'),b.clone().multiplyScalar(c).add(a)}function e(a,b,c){var d,e,f=Math.sign,g=Math.sqrt,h=Number.EPSILON,i=1,j=a.x-b.x,k=a.y-b.y,l=c.x-a.x,m=c.y-a.y,n=j*j+k*k;if(Math.abs(j*m-k*l)>h){var o=g(n),p=g(l*l+m*m),q=b.x-k/o,r=b.y+j/o,s=c.x-m/p,t=c.y+l/p,u=((s-q)*m-(t-r)*l)/(j*m-k*l);d=q+j*u-a.x,e=r+k*u-a.y;var v=d*d+e*e;if(2>=v)return new Vector2(d,e);i=g(v/2)}else{var w=!1;j>h?l>h&&(w=!0):j<-h?l<-h&&(w=!0):f(k)===f(m)&&(w=!0),w?(d=-k,e=j,i=g(n)):(d=j,e=k,i=g(n/2))}return new Vector2(d/i,e/i)}function f(e,f){var g,h;for(da=e.length;0<=--da;){g=da,h=da-1,0>h&&(h=e.length-1);var i=0,j=L+2*I;for(i=0;i<j;i++){var k=aa*i,l=aa*(i+1),n=f+g+k,a=f+h+k,b=f+h+l,c=f+g+l;m(n,a,b,c,e,i,j,g,h)}}}function g(a,b,c){E.push(a),E.push(b),E.push(c)}function l(d,a,b){n(d),n(a),n(b);var c=B.length/3,e=O.generateTopUV(R,B,c-3,c-2,c-1);o(e[0]),o(e[1]),o(e[2])}function m(e,a,b,c){n(e),n(a),n(c),n(a),n(b),n(c);var d=B.length/3,f=O.generateSideWallUV(R,B,d-6,d-3,d-2,d-1);o(f[0]),o(f[1]),o(f[3]),o(f[1]),o(f[2]),o(f[3])}function n(a){C.push(B.length/3),B.push(E[3*a+0]),B.push(E[3*a+1]),B.push(E[3*a+2])}function o(a){D.push(a.x),D.push(a.y)}var p,q,r,u,v,w=Math.sin,x=Math.cos,y=Math.PI,A=c.arrays?c.arrays:this.getArrays(),B=A.position,C=A.index,D=A.uv,E=[],F=void 0===c.amount?100:c.amount,G=void 0===c.bevelThickness?6:c.bevelThickness,H=void 0===c.bevelSize?G-2:c.bevelSize,I=void 0===c.bevelSegments?3:c.bevelSegments,J=void 0===c.bevelEnabled||c.bevelEnabled,K=void 0===c.curveSegments?12:c.curveSegments,L=void 0===c.steps?1:c.steps,M=c.extrudePath,N=!1,O=void 0===c.UVGenerator?ExtrudeGeometry.WorldUVGenerator:c.UVGenerator;M&&(p=M.getSpacedPoints(L),N=!0,J=!1,q=c.frames===void 0?M.computeFrenetFrames(L,!1):c.frames,r=new Vector3,u=new Vector3,v=new Vector3),J||(I=0,G=0,H=0);var P,Q,h,R=this,S=a.extractPoints(K),T=S.shape,U=S.holes,V=!ShapeUtils.isClockWise(T);if(V){for(T=T.reverse(),Q=0,h=U.length;Q<h;Q++)P=U[Q],ShapeUtils.isClockWise(P)&&(U[Q]=P.reverse());V=!1}var W=ShapeUtils.triangulateShape(T,U),X=T;for(Q=0,h=U.length;Q<h;Q++)P=U[Q],T=T.concat(P);for(var Y,b,Z,t,$,_,aa=T.length,ba=W.length,ca=[],da=0,i=X.length,ea=i-1,j=da+1;da<i;da++,ea++,j++)ea===i&&(ea=0),j===i&&(j=0),ca[da]=e(X[da],X[ea],X[j]);var k,fa=[],ga=ca.concat();for(Q=0,h=U.length;Q<h;Q++){for(P=U[Q],k=[],(da=0,i=P.length,ea=i-1,j=da+1);da<i;da++,ea++,j++)ea===i&&(ea=0),j===i&&(j=0),k[da]=e(P[da],P[ea],P[j]);fa.push(k),ga=ga.concat(k)}for(Y=0;Y<I;Y++){for(Z=Y/I,t=G*x(Z*y/2),b=H*w(Z*y/2),(da=0,i=X.length);da<i;da++)$=d(X[da],ca[da],b),g($.x,$.y,-t);for(Q=0,h=U.length;Q<h;Q++)for(P=U[Q],k=fa[Q],(da=0,i=P.length);da<i;da++)$=d(P[da],k[da],b),g($.x,$.y,-t)}for(b=H,da=0;da<aa;da++)$=J?d(T[da],ga[da],b):T[da],N?(u.copy(q.normals[0]).multiplyScalar($.x),r.copy(q.binormals[0]).multiplyScalar($.y),v.copy(p[0]).add(u).add(r),g(v.x,v.y,v.z)):g($.x,$.y,0);var ha;for(ha=1;ha<=L;ha++)for(da=0;da<aa;da++)$=J?d(T[da],ga[da],b):T[da],N?(u.copy(q.normals[ha]).multiplyScalar($.x),r.copy(q.binormals[ha]).multiplyScalar($.y),v.copy(p[ha]).add(u).add(r),g(v.x,v.y,v.z)):g($.x,$.y,F/L*ha);for(Y=I-1;0<=Y;Y--){for(Z=Y/I,t=G*x(Z*y/2),b=H*w(Z*y/2),(da=0,i=X.length);da<i;da++)$=d(X[da],ca[da],b),g($.x,$.y,F+t);for(Q=0,h=U.length;Q<h;Q++)for(P=U[Q],k=fa[Q],(da=0,i=P.length);da<i;da++)$=d(P[da],k[da],b),N?g($.x,$.y+p[L-1].y,p[L-1].x+t):g($.x,$.y,F+t)}(function(){var a=B.length/3;if(J){var b=0,d=aa*b;for(da=0;da<ba;da++)_=W[da],l(_[2]+d,_[1]+d,_[0]+d);for(b=L+2*I,d=aa*b,da=0;da<ba;da++)_=W[da],l(_[0]+d,_[1]+d,_[2]+d)}else{for(da=0;da<ba;da++)_=W[da],l(_[2],_[1],_[0]);for(da=0;da<ba;da++)_=W[da],l(_[0]+aa*L,_[1]+aa*L,_[2]+aa*L)}R.addGroup(a,B.length/3-a,c.material===void 0?0:c.material)})(),function(){var a=B.length/3,b=0;for(f(X,b),b+=X.length,(Q=0,h=U.length);Q<h;Q++)P=U[Q],f(P,b),b+=P.length;R.addGroup(a,B.length/3-a,c.extrudeMaterial===void 0?1:c.extrudeMaterial)}(),c.arrays||(this.setIndex(C),this.addAttribute('position',new Float32BufferAttribute(B,3)),this.addAttribute('uv',new Float32BufferAttribute(c.arrays.uv,2)))},ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e){var f=b[3*c],g=b[3*c+1],h=b[3*d],i=b[3*d+1],j=b[3*e],k=b[3*e+1];return[new Vector2(f,g),new Vector2(h,i),new Vector2(j,k)]},generateSideWallUV:function(a,b,c,d,e,f){var g=b[3*c],h=b[3*c+1],i=b[3*c+2],j=b[3*d],k=b[3*d+1],l=b[3*d+2],m=b[3*e],n=b[3*e+1],o=b[3*e+2],p=b[3*f],q=b[3*f+1],r=b[3*f+2];return 0.01>Math.abs(h-k)?[new Vector2(g,1-i),new Vector2(j,1-l),new Vector2(m,1-o),new Vector2(p,1-r)]:[new Vector2(h,1-i),new Vector2(k,1-l),new Vector2(n,1-o),new Vector2(q,1-r)]}};export{ExtrudeGeometry,ExtrudeBufferGeometry};