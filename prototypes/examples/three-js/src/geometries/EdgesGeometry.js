import{BufferGeometry}from'../core/BufferGeometry.js';import{Float32BufferAttribute}from'../core/BufferAttribute.js';import{Geometry}from'../core/Geometry.js';import{_Math}from'../math/Math.js';function EdgesGeometry(a,b){BufferGeometry.call(this),this.type='EdgesGeometry',this.parameters={thresholdAngle:b},b=b===void 0?1:b;var c,d,f,g,h=[],k=Math.cos(_Math.DEG2RAD*b),m=[0,0],n={},o=['a','b','c'];a.isBufferGeometry?(g=new Geometry,g.fromBufferGeometry(a)):g=a.clone(),g.mergeVertices(),g.computeFaceNormals();for(var p,q=g.vertices,r=g.faces,s=0,t=r.length;s<t;s++){p=r[s];for(var l=0;3>l;l++)c=p[o[l]],d=p[o[(l+1)%3]],m[0]=Math.min(c,d),m[1]=Math.max(c,d),f=m[0]+','+m[1],void 0===n[f]?n[f]={index1:m[0],index2:m[1],face1:s,face2:void 0}:n[f].face2=s}for(f in n){var j=n[f];if(j.face2===void 0||r[j.face1].normal.dot(r[j.face2].normal)<=k){var e=q[j.index1];h.push(e.x,e.y,e.z),e=q[j.index2],h.push(e.x,e.y,e.z)}}this.addAttribute('position',new Float32BufferAttribute(h,3))}EdgesGeometry.prototype=Object.create(BufferGeometry.prototype),EdgesGeometry.prototype.constructor=EdgesGeometry;export{EdgesGeometry};