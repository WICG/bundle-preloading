import{Geometry}from'../core/Geometry.js';import{BufferGeometry}from'../core/BufferGeometry.js';import{Float32BufferAttribute}from'../core/BufferAttribute.js';import{Vector3}from'../math/Vector3.js';import{Vector2}from'../math/Vector2.js';function CylinderGeometry(a,b,c,d,e,f,g,h){Geometry.call(this),this.type='CylinderGeometry',this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h},this.fromBufferGeometry(new CylinderBufferGeometry(a,b,c,d,e,f,g,h)),this.mergeVertices()}CylinderGeometry.prototype=Object.create(Geometry.prototype),CylinderGeometry.prototype.constructor=CylinderGeometry;function CylinderBufferGeometry(e,f,g,h,i,a,b,c){function d(a){var d,g,l,s=new Vector2,v=new Vector3,x=0,y=!0===a?e:f,z=!0===a?1:-1;for(g=r,d=1;d<=h;d++)o.push(0,t*z,0),p.push(0,z,0),q.push(0.5,0.5),r++;for(l=r,d=0;d<=h;d++){var A=d/h,u=A*c+b,B=j(u),C=k(u);v.x=y*C,v.y=t*z,v.z=y*B,o.push(v.x,v.y,v.z),p.push(0,z,0),s.x=0.5*B+0.5,s.y=0.5*C*z+0.5,q.push(s.x,s.y),r++}for(d=0;d<h;d++){var D=g+d,E=l+d;!0===a?n.push(E,E+1,D):n.push(E+1,E,D),x+=3}m.addGroup(w,x,!0===a?1:2),w+=x}var j=Math.cos,k=Math.sin,l=Math.floor;BufferGeometry.call(this),this.type='CylinderBufferGeometry',this.parameters={radiusTop:e,radiusBottom:f,height:g,radialSegments:h,heightSegments:i,openEnded:a,thetaStart:b,thetaLength:c};var m=this;e=e===void 0?20:e,f=f===void 0?20:f,g=g===void 0?100:g,h=l(h)||8,i=l(i)||1,a=a!==void 0&&a,b=b===void 0?0:b,c=c===void 0?2*Math.PI:c;var n=[],o=[],p=[],q=[],r=0,s=[],t=g/2,w=0;(function(){var l,x,y=new Vector3,z=new Vector3,A=0,B=(f-e)/g;for(x=0;x<=i;x++){var C=[],D=x/i,E=D*(f-e)+e;for(l=0;l<=h;l++){var F=l/h,u=F*c+b,G=k(u),H=j(u);z.x=E*G,z.y=-D*g+t,z.z=E*H,o.push(z.x,z.y,z.z),y.set(G,B,H).normalize(),p.push(y.x,y.y,y.z),q.push(F,1-D),C.push(r++)}s.push(C)}for(l=0;l<h;l++)for(x=0;x<i;x++){var I=s[x][l],a=s[x+1][l],J=s[x+1][l+1],K=s[x][l+1];n.push(I,a,K),n.push(a,J,K),A+=6}m.addGroup(w,A,0),w+=A})(),!1===a&&(0<e&&d(!0),0<f&&d(!1)),this.setIndex(n),this.addAttribute('position',new Float32BufferAttribute(o,3)),this.addAttribute('normal',new Float32BufferAttribute(p,3)),this.addAttribute('uv',new Float32BufferAttribute(q,2))}CylinderBufferGeometry.prototype=Object.create(BufferGeometry.prototype),CylinderBufferGeometry.prototype.constructor=CylinderBufferGeometry;export{CylinderGeometry,CylinderBufferGeometry};