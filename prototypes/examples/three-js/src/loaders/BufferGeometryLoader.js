import{Sphere}from'../math/Sphere.js';import{Vector3}from'../math/Vector3.js';import{BufferAttribute}from'../core/BufferAttribute.js';import{BufferGeometry}from'../core/BufferGeometry.js';import{FileLoader}from'./FileLoader.js';import{DefaultLoadingManager}from'./LoadingManager.js';function BufferGeometryLoader(a){this.manager=a===void 0?DefaultLoadingManager:a}Object.assign(BufferGeometryLoader.prototype,{load:function(a,b,c,d){var e=this,f=new FileLoader(e.manager);f.setResponseType('json'),f.load(a,function(a){b(e.parse(a))},c,d)},parse:function(a){var b=new BufferGeometry,c=a.data.index;if(c!==void 0){var d=new TYPED_ARRAYS[c.type](c.array);b.setIndex(new BufferAttribute(d,1))}var e=a.data.attributes;for(var f in e){var g=e[f],d=new TYPED_ARRAYS[g.type](g.array);b.addAttribute(f,new BufferAttribute(d,g.itemSize,g.normalized))}var h=a.data.groups||a.data.drawcalls||a.data.offsets;if(h!==void 0)for(var j,k=0,i=h.length;k!==i;++k)j=h[k],b.addGroup(j.start,j.count,j.materialIndex);var l=a.data.boundingSphere;if(l!==void 0){var m=new Vector3;l.center!==void 0&&m.fromArray(l.center),b.boundingSphere=new Sphere(m,l.radius)}return b}});var TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};export{BufferGeometryLoader};