import{Vector3}from'../math/Vector3.js';import{Color}from'../math/Color.js';import{Object3D}from'../core/Object3D.js';import{Mesh}from'../objects/Mesh.js';import{VertexColors}from'../constants.js';import{MeshBasicMaterial}from'../materials/MeshBasicMaterial.js';import{OctahedronBufferGeometry}from'../geometries/OctahedronGeometry.js';import{BufferAttribute}from'../core/BufferAttribute.js';function HemisphereLightHelper(a,b){Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1;var c=new OctahedronBufferGeometry(b);c.rotateY(0.5*Math.PI);var d=new MeshBasicMaterial({vertexColors:VertexColors,wireframe:!0}),e=c.getAttribute('position'),f=new Float32Array(3*e.count);c.addAttribute('color',new BufferAttribute(f,3)),this.add(new Mesh(c,d)),this.update()}HemisphereLightHelper.prototype=Object.create(Object3D.prototype),HemisphereLightHelper.prototype.constructor=HemisphereLightHelper,HemisphereLightHelper.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},HemisphereLightHelper.prototype.update=function(){var a=new Vector3,b=new Color,c=new Color;return function(){var d=this.children[0],e=d.geometry.getAttribute('color');b.copy(this.light.color),c.copy(this.light.groundColor);for(var f,g=0,h=e.count;g<h;g++)f=g<h/2?b:c,e.setXYZ(g,f.r,f.g,f.b);d.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate()),e.needsUpdate=!0}}();export{HemisphereLightHelper};