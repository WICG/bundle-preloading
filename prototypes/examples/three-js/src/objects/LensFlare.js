import{Object3D}from'../core/Object3D.js';import{NormalBlending}from'../constants.js';import{Color}from'../math/Color.js';import{Vector3}from'../math/Vector3.js';function LensFlare(a,b,c,d,e){Object3D.call(this),this.lensFlares=[],this.positionScreen=new Vector3,this.customUpdateCallback=void 0,a!==void 0&&this.add(a,b,c,d,e)}LensFlare.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LensFlare,isLensFlare:!0,copy:function(a){Object3D.prototype.copy.call(this,a),this.positionScreen.copy(a.positionScreen),this.customUpdateCallback=a.customUpdateCallback;for(var b=0,c=a.lensFlares.length;b<c;b++)this.lensFlares.push(a.lensFlares[b]);return this},add:function(a,b,c,d,e,f){b===void 0&&(b=-1),c===void 0&&(c=0),f===void 0&&(f=1),e===void 0&&(e=new Color(16777215)),d===void 0&&(d=NormalBlending),c=Math.min(c,Math.max(0,c)),this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:0,opacity:f,color:e,blending:d})},updateLensFlares:function(){var a,b,c=this.lensFlares.length,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<c;a++)b=this.lensFlares[a],b.x=this.positionScreen.x+d*b.distance,b.y=this.positionScreen.y+e*b.distance,b.wantedRotation=0.25*(b.x*Math.PI),b.rotation+=0.25*(b.wantedRotation-b.rotation)}});export{LensFlare};